{
    import "Label";
 
    list items = [
        `item (`id ("a"), "a"),
        `item (`id ("x"), "x"),
        `item (`id ("y"), "y"),
        `item (`id ("z"), "z")
    ];
 
    term contents = `HBox (`VSpacing (20), `VBox (`HSpacing(70),
            `VSpacing (0.2),
            `MultiSelectionBox (`id(`multisel), `opt(`notify),  "Multiselection", items),
            `HBox (
                `PushButton (`id (`ok), `opt (`default), Label::OKButton()),
                `PushButton(`id (`cancel), `opt (`key_F9), Label::CancelButton())
            ),
            `VSpacing (0.2)
        ));
 
    UI::OpenDialog (`opt (`decorated), contents);
    UI::ChangeWidget (`multisel, `CurrentItem, nil);

    UI::ChangeWidget(`multisel, `SelectedItems, ["a", "x" ] );
    UI::ChangeWidget(`multisel, `SelectedItems, ["y", "z" ] );

    list selected_items = (list) UI::QueryWidget( `id(`multisel), `SelectedItems );
    y2milestone( "Selected items: %1", selected_items );
    y2milestone( "Current item: %1", (string) UI::QueryWidget (`id(`multisel),`CurrentItem)); 
    while (true)
    {
        map event       = UI::WaitForEvent ();
        any ret         = event["ID"]:nil;
        if (ret == `multisel)
        {
            string current = (string) UI::QueryWidget (`id(`multisel),`CurrentItem);
            y2internal ("current: %1", current);
        }
 
        if (ret == `ok || ret == `cancel)
            break;
    }
    string current = (string) UI::QueryWidget (`id(`multisel),`CurrentItem);
    y2internal ("current before leaving: %1", current );
    UI::CloseDialog ();
}
 
